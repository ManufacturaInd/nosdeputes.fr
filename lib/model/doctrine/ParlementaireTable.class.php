<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ParlementaireTable extends PersonnaliteTable
{
  static $all;

  public function similarTo($str)
  {
    $str = preg_replace('/\(.*\)/', '', $str);
    $word = preg_replace('/^.*\s(\S+)\s*$/i', '\\1', $str);
    $q = $this->createQuery('p')->where('nom LIKE ?', '% '.$word.'%');
    $res = $q->Execute();
    if ($res->count() == 1) {
      return $res[0];
    }
    $q->free();
    $res->free();

    //load parlementaires only once
    if (!$this->all)
      $this->all = $this->createQuery('p')->fetchArray();

    $closest = null;
    $closest_res = -1;
    //Compare each parlementaire with the string and keep the best
    foreach ($this->all as $parl) {
      $res = similar_text(preg_replace('/[^a-z]+/i', ' ', $parl['nom']), preg_replace('/[^a-z]+/i', ' ', $str), $pc);
      if ($res > 0 && $pc > $closest_res) {
	$closest = $parl;
	$closest_res = $pc;
      }
    }

#    echo "$str "; echo $closest['nom'];    echo " $closest_res\n";

    //If more than 85% similarities, it is the best
    if ($closest_res > 85)
      return $this->find($closest['id']);
    //If str is the end of the best parlementaire, it is OK (remove non alpha car to avoid preg pb)
    if (preg_match('/'.preg_replace('/[^a-z]/i', '', $str).'$/', preg_replace('/[^a-z]/i', '', $closest['nom'])))
      return $this->find($closest['id']);


    return null;
  }

  public function getPager($request, $query = NULL)
  {
    $pager = new sfDoctrinePager('Parlementaire',20);
    if (!$query) {
      $query = $this->createQuery('p')->orderBy('p.nom_de_famille ASC');
    }
    $pager->setQuery($query);
    $pager->setPage($request->getParameter('page', 1));
    $pager->init();
    return $pager;
  }
}